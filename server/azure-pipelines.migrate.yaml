trigger: none

pr:
  autoCancel: true
  branches:
    include: [master]
  paths:
    include: [data/*]

pool:
  vmImage: ubuntu-latest

steps:
  - checkout: none

  - script: |
      git config --global user.name "$(GitHub.Name)"
      git config --global user.email "$(GitHub.Email)"
      git clone $(Build.Repository.Uri) .
      git checkout $(System.PullRequest.SourceBranch)
    displayName: checkout source branch

  # TODO: on exit, don't fail the pipeline
  - bash: |
      LASTMSG=$(git log -n 1 --pretty=format:"%s")
      echo "Last commit message: $LASTMSG"
      if [[ "$LASTMSG" == "migrate PR #$SYSTEM_PULLREQUEST_PULLREQUESTNUMBER" ]] ; then
        echo "Just migrated. Exiting..."
      fi
    displayName: abort if just migrated

  - task: UseDotNet@2
    displayName: use latest dotnet sdk
    inputs:
      version: 3.x

  - script: dotnet tool install -g dotnet-ef
    displayName: install ef dotnet tool

  - bash: |
      MIGLIST=$(dotnet ef migrations list -p FilterLists.Data.Migrations -s FilterLists.Api)
      echo "$MIGLIST"
      if [[ "$MIGLIST" == *$SYSTEM_PULLREQUEST_PULLREQUESTNUMBER ]] ; then
        echo "A migration already exists for PR #$SYSTEM_PULLREQUEST_PULLREQUESTNUMBER, reverting..."
        REVERTHASH=$(git log --grep="migrate PR #$SYSTEM_PULLREQUEST_PULLREQUESTNUMBER" -n 1 --pretty=format:"%H")
        git revert --no-edit $REVERTHASH
      else
        echo "No migration exists yet for PR #$SYSTEM_PULLREQUEST_PULLREQUESTNUMBER."
      fi
    displayName: revert existing PR migration (if exists)
    workingDirectory: server/src

  - script: dotnet ef migrations add $(System.PullRequest.PullRequestNumber) -p FilterLists.Data.Migrations -s FilterLists.Api
    displayName: add migration
    workingDirectory: server/src

  # TODO: on exit, don't fail the pipeline
  - bash: |
      git add .
      DIFF=$(git diff --cached --numstat | wc -l)
      echo "$DIFF files changed"
      if (( $DIFF != 3 )) ; then
        echo "Empty migration. Abandoning..."
        exit 1
      fi
    displayName: abort if empty migration

  - task: DockerCompose@0
    displayName: build test-data
    inputs:
      dockerComposeFile: docker-compose.data.tests.yml
      dockerComposeCommand: build api

  - task: Docker@2
    displayName: create volume test-data-results
    inputs:
      command: volume
      arguments: create test-data-results

  - task: DockerCompose@0
    displayName: up test-data db
    inputs:
      dockerComposeFile: docker-compose.data.tests.yml
      dockerComposeCommand: up -d mariadb

  - task: DockerCompose@0
    displayName: run test-data
    inputs:
      dockerComposeFile: docker-compose.data.tests.yml
      dockerComposeCommand: run api

  - task: Docker@2
    displayName: create container test-data-results
    inputs:
      command: container
      arguments: create --name test-data-results -v test-data-results:/results hello-world
    condition: succeededOrFailed()

  - task: Docker@2
    displayName: copy out test-data results
    inputs:
      command: cp
      arguments: test-data-results:/results $(System.DefaultWorkingDirectory)
    condition: succeededOrFailed()

  - task: PublishTestResults@2
    displayName: publish test results
    inputs:
      testResultsFormat: VSTest
      testResultsFiles: "**/*.trx"
    condition: succeededOrFailed()

  - script: |
      git commit -m "migrate PR #$(System.PullRequest.PullRequestNumber)"
      git config --global credential.helper store
      echo "https://$(GitHub.PAT):x-oauth-basic@github.com" >> ~/.git-credentials
      git push origin $(System.PullRequest.SourceBranch)
    displayName: git push migration
